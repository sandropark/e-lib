name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    steps:
      #  소스코드 불러오기
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17
          check-latest: true

      # 컨테이너 레지스트리 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/elib:${{ github.run_number }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.OCI_APPLICATION_HOST }}
          username: ${{ secrets.OCI_APPLICATION_USERNAME }}
          key: ${{ secrets.OCI_SSH_KEY }}
          port: 22
          script: |
            if ls | grep -q e-lib; then
              cd e-lib/deploy
              git pull
            else 
              git clone https://github.com/sandropark/e-lib.git
              cd e-lib/deploy
            fi
            
            echo "APP_LATEST_TAG=${{ github.run_number }}" > .env  
            echo "OCI_DB_HOST=${{secrets.OCI_DB_HOST}}" >> .env
            echo "OCI_DB_USERNAME=${{secrets.OCI_DB_USERNAME}}" >> .env
            echo "OCI_DB_PASSWORD=${{secrets.OCI_DB_PASSWORD}}" >> .env
            
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            chmod 777 ./deploy.sh
            sudo ./deploy.sh